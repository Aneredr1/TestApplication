// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApplication.Model.Data;

namespace TestApplication.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestApplication.Model.Nomenclature", b =>
                {
                    b.Property<int>("Nomenclature_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Nomenclature_Id");

                    b.ToTable("Nomenclatures");

                    b.HasData(
                        new
                        {
                            Nomenclature_Id = 1,
                            FromDate = new DateTime(2021, 4, 7, 10, 39, 52, 595, DateTimeKind.Local).AddTicks(3437),
                            Name = "Nom1",
                            Price = 10000m,
                            ToDate = new DateTime(2021, 4, 7, 10, 39, 52, 596, DateTimeKind.Local).AddTicks(800)
                        },
                        new
                        {
                            Nomenclature_Id = 2,
                            FromDate = new DateTime(2021, 4, 7, 10, 39, 52, 596, DateTimeKind.Local).AddTicks(1323),
                            Name = "Nom2",
                            Price = 20000m,
                            ToDate = new DateTime(2021, 4, 7, 10, 39, 52, 596, DateTimeKind.Local).AddTicks(1340)
                        },
                        new
                        {
                            Nomenclature_Id = 3,
                            FromDate = new DateTime(2021, 4, 7, 10, 39, 52, 596, DateTimeKind.Local).AddTicks(1348),
                            Name = "Nom3",
                            Price = 30000m,
                            ToDate = new DateTime(2021, 4, 7, 10, 39, 52, 596, DateTimeKind.Local).AddTicks(1349)
                        });
                });

            modelBuilder.Entity("TestApplication.Model.User", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            User_Id = 1,
                            Login = "Login1",
                            Pass = "password"
                        },
                        new
                        {
                            User_Id = 2,
                            Login = "Login2",
                            Pass = "qwerty"
                        },
                        new
                        {
                            User_Id = 3,
                            Login = "Login3",
                            Pass = "podsolnuh"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
